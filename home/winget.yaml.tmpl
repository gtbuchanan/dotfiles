---
# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
# https://learn.microsoft.com/en-us/windows/package-manager/configuration/create
properties:
  configurationVersion: 0.2.0
  resources:
    - resource: Microsoft.Windows.Developer/DeveloperMode
      directives:
        description: Enable Developer Mode
        allowPrerelease: true
      settings:
        Ensure: Present
    - resource: Microsoft.Windows.Developer/Taskbar
      directives:
        description: Configure Taskbar
        allowPrerelease: true
      settings:
        SearchBoxMode: Hide
        TaskViewButton: Hide
        RestartExplorer: true
        WidgetsButton: Hide
    - resource: Microsoft.Windows.Developer/WindowsExplorer
      directives:
        description: Configure Explorer
        allowPrerelease: true
      settings:
        FileExtensions: Show
        HiddenFiles: Show
        ItemCheckBoxes: Show
        RestartExplorer: true
    - resource: Microsoft.Windows.Developer/ShowSecondsInClock
      directives:
        description: Show Seconds in Clock
        allowPrerelease: true
      settings:
        Ensure: Present
    - resource: Microsoft.Windows.Developer/EnableDarkMode
      directives:
        description: Enable Dark Mode
        allowPrerelease: true
      settings:
        Ensure: Present
        RestartExplorer: true
    - resource: xPSDesiredStateConfiguration/xScript
      directives:
        allowPrerelease: true
        description: Enable Sudo
        securityContext: elevated
      id: sudo
      settings:
        GetScript: |
          @{ Result = (sudo config) }
        TestScript: |
          (sudo config).Contains("Inline")
        SetScript: |
          sudo config --enable normal
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install 7zip
      id: 7zip
      settings:
        id: 7zip.7zip
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Adobe Reader
      id: adobeReader
      settings:
        id: Adobe.Acrobat.Reader.64-bit
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Advanced IP Scanner
      id: advancedIPScanner
      settings:
        id: Famatech.AdvancedIPScanner
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Android Studio
      id: androidStudio
      settings:
        id: Google.AndroidStudio
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Audacity
      id: audacity
      settings:
        id: Audacity.Audacity
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "ewn" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Azure CLI
      id: azureCli
      settings:
        id: Microsoft.AzureCLI
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Azure Storage Explorer
      id: azureStorageExplorer
      settings:
        id: Microsoft.Azure.StorageExplorer
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Bitwarden
      id: bitwarden
      settings:
        id: Bitwarden.Bitwarden
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Blender
      id: blender
      settings:
        id: BlenderFoundation.Blender
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Brave
      id: brave
      settings:
        id: Brave.Brave
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Calibre
      id: calibre
      settings:
        id: calibre.calibre
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      dependsOn: [chromeExe]
      directives:
        description: Install Chrome
      id: chrome
      settings:
        id: Google.Chrome
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Remove Chrome.EXE
      id: chromeExe
      settings:
        id: Google.Chrome.EXE
        ensure: Absent
        source: winget
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install DB Browser for SQLite
      id: dbBrowserForSQLite
      settings:
        id: DBBrowserForSQLite.DBBrowserForSQLite
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Debug Diagnostics
      id: debugDiag
      settings:
        id: Microsoft.DebugDiag
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Deluge
      id: deluge
      settings:
        id: DelugeTeam.Deluge
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Docker
      id: docker
      settings:
        id: Docker.DockerDesktop
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Etcher
      id: etcher
      settings:
        id: Balena.Etcher
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Exercism CLI
      id: exercism
      settings:
        id: Exercism.CLI
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Feather Wallet
      id: featherWallet
      settings:
        id: FeatherWallet.Feather
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install FFmpeg
      id: ffmpeg
      settings:
        id: Gyan.FFmpeg
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Firefox
      id: firefox
      settings:
        id: Mozilla.Firefox
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Free Download Manager
      id: fdm
      settings:
        id: SoftDeluxe.FreeDownloadManager
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Git
      id: git
      settings:
        id: Git.Git
        source: winget
        useLatest: true
    - resource: xPSDesiredStateConfiguration/xScript
      dependsOn: [git]
      directives:
        description: Prepend Git to PATH variable
        securityContext: elevated
      id: gitPath
      settings:
        GetScript: |
          $BashPath = (Get-Command bash -ErrorAction SilentlyContinue).Source
          @{ Result = $BashPath }
        TestScript: |
          $BashPath = (Get-Command bash -ErrorAction SilentlyContinue).Source
          $BashPath -Ne $null -And $BashPath.StartsWith("$env:PROGRAMFILES\Git\bin")
        SetScript: |
          # Preserve unexpanded variables
          $RegPath = "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
          $Current = (Get-Item -Path $RegPath).GetValue(`
            "Path", "", [Microsoft.Win32.RegistryValueOptions]::DoNotExpandEnvironmentNames)
          # Prepend to support pre-commit
          # https://github.com/pre-commit/pre-commit/issues/3091#issuecomment-1848626206
          $GitBinPath = "%PROGRAMFILES%\Git\bin"
          $New = @($GitBinPath) + [Linq.Enumerable]::Except[object](`
            $Current.Split(";"), @($GitBinPath, "$env:PROGRAMFILES\Git\bin")) -Join ";"
          [Environment]::SetEnvironmentVariable("Path", $New.TrimEnd(";"), "Machine")
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install GitHub CLI
      id: githubCli
      settings:
        id: GitHub.cli
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Gpg4win
      id: gpg4win
      settings:
        id: GnuPG.Gpg4win
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Grammarly
      id: grammarly
      settings:
        id: Grammarly.Grammarly
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Handbrake
      id: handbrake
      settings:
        id: HandBrake.HandBrake
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install ImgBurn
      id: imgburn
      settings:
        id: LIGHTNINGUK.ImgBurn
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install KDiff3
      id: kdiff3
      settings:
        # TODO: Pass CLI options when supported
        id: KDE.KDiff3
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Logitech LogiTune
      id: logitechLogiTune
      settings:
        id: Logitech.LogiTune
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Minecraft Launcher
      id: minecraft
      settings:
        id: Mojang.MinecraftLauncher
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Mp3Tag
      id: mp3tag
      settings:
        id: FlorianHeidenreich.Mp3tag
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install mRemoteNG
      id: mremoteng
      settings:
        id: mRemoteNG.mRemoteNG
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install NextCloud Desktop
      id: nextcloudDesktop
      settings:
        id: Nextcloud.NextcloudDesktop
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install NodeJS
      id: nodejs
      settings:
        id: OpenJS.NodeJS.LTS
        source: winget
{{- if eq .hosttype "ewn" }}
        version: 20.19.1
{{- else }}
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install npiperelay
      id: npiperelay
      settings:
        id: albertony.npiperelay
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install NuGet
      id: nuget
      settings:
        id: Microsoft.NuGet
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install OBS Studio
      id: obsStudio
      settings:
        id: OBSProject.OBSStudio
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Oh My Posh
      id: ohMyPosh
      settings:
        id: JanDeDobbeleer.OhMyPosh
        source: winget
        useLatest: true
    - resource: xPSDesiredStateConfiguration/xScript
      dependsOn: [ohMyPosh]
      directives:
        description: Install Caskaydia Cove Font
      id: caskaydiaCoveFont
      settings:
        GetScript: |
          Add-Type -AssemblyName System.Drawing
          $Fonts = (New-Object System.Drawing.Text.InstalledFontCollection).Families | `
            Where-Object Name -Like "CaskaydiaCove*" | `
            Select-Object -ExpandProperty Name
          ${ Result = $Fonts }
        TestScript: |
          Add-Type -AssemblyName System.Drawing
          $Fonts = (New-Object System.Drawing.Text.InstalledFontCollection).Families | `
            Select-Object -ExpandProperty Name
          $Fonts.Contains("CaskaydiaCove NFM")
        SetScript: |
          oh-my-posh font install CascadiaCode
    - resource: xPSDesiredStateConfiguration/xScript
      dependsOn: [sudo]
      directives:
        description: Install OpenSSH Client
      id: openssh
      settings:
        GetScript: |
          $Command = "(Get-WindowsCapability -Online | Where-Object Name -Like 'OpenSSH.Client*').State"
          $EncodedCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($Command))
          $State = (sudo --disable-input powershell -EncodedCommand $EncodedCommand)
          @{ Result = $State }
        TestScript: |
          $Command = "(Get-WindowsCapability -Online | Where-Object Name -Like 'OpenSSH.Client*').State"
          $EncodedCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($Command))
          $State = (sudo --disable-input powershell -EncodedCommand $EncodedCommand)
          $State -Eq 'Installed'
        SetScript: |
          $Command = "Add-WindowsCapability -Online -Name 'OpenSSH.Client~~~~0.0.1.0'"
          $EncodedCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($Command))
          sudo --disable-input powershell -EncodedCommand $EncodedCommand
    - resource: xPSDesiredStateConfiguration/xService
      dependsOn: [openssh]
      directives:
        description: Start ssh-agent
      id: sshAgent
      settings:
        Name: ssh-agent
        State: Running
        StartupType: Automatic
    - resource: xPSDesiredStateConfiguration/xEnvironment
      dependsOn: [openssh]
      directives:
        description: Set GIT_SSH variable
        securityContext: elevated
      id: gitSsh
      settings:
        Name: GIT_SSH
        Target: [Machine]
        Value: '%SYSTEMROOT%\System32\OpenSSH\ssh.exe'
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install OpenSSL
      id: openssl
      settings:
        id: FireDaemon.OpenSSL
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install pnpm
      id: pnpm
      settings:
        id: pnpm.pnpm
        source: winget
        useLatest: true
    - resource: PowerShellGet/PSModule
      dependsOn: [pwsh]
      directives:
        description: Install posh-git
      id: poshGit
      settings:
        Name: posh-git
        InstallationPolicy: Trusted
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Postman
      id: postman
      settings:
        id: Postman.Postman
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install PowerShell
      id: pwsh
      settings:
        id: Microsoft.PowerShell
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: powerToys
      directives:
        description: Install PowerToys
        allowPrerelease: true
      settings:
        id: Microsoft.PowerToys
        source: winget
        useLatest: true
    - resource: Microsoft.PowerToys.Configure/PowerToysConfigure
      dependsOn: [powerToys]
      directives:
        description: Configure PowerToys
      settings:
        AdvancedPaste:
          Enabled: true
        Awake:
          Enabled: true
        ColorPicker:
          Enabled: true
        FancyZones:
          Enabled: true
        FileLocksmith:
          Enabled: true
        # Interferes with KVM switch keybinding
        FindMyMouse:
          Enabled: false
        Hosts:
          Enabled: true
        ImageResizer:
          Enabled: true
        PowerAccent:
          Enabled: true
        PowerRename:
          Enabled: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install PuTTY
      id: putty
      settings:
        id: PuTTY.PuTTY
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Python Launcher
      id: pythonLauncher
      settings:
        id: Python.Launcher
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Python
      id: python3
      settings:
        id: Python.Python.3.13
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install QMKToolbox
      id: qmktoolbox
      settings:
        id: QMK.QMKToolbox
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install QOwnNotes
      id: qownnotes
      settings:
        id: pbek.QOwnNotes
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Raspberry Pi Imager
      id: raspiImager
      settings:
        id: RaspberryPiFoundation.RaspberryPiImager
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "ewn" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Safe Exam Browser
      id: seb
      settings:
        id: ETHZurich.SafeExamBrowser
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Service Bus Explorer
      id: serviceBusExplorer
      settings:
        id: paolosalvatori.ServiceBusExplorer
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Slack
      id: slack
      settings:
        id: SlackTechnologies.Slack
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install SSMS
      id: ssms
      settings:
        id: Microsoft.SQLServerManagementStudio
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Steam
      id: steam
      settings:
        id: Valve.Steam
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Sysinternals
      id: sysinternals
      settings:
        id: Microsoft.Sysinternals.Suite
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Terraform
      id: terraform
      settings:
        id: Hashicorp.Terraform
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install TFLint
      id: tflint
      settings:
        id: TerraformLinters.tflint
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Thunderbird
      id: thunderbird
      settings:
        id: Mozilla.Thunderbird
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Tor Browser
      id: torBrowser
      settings:
        id: TorProject.TorBrowser
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "ewn" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install TortoiseGit
      id: tortoiseGit
      settings:
        id: TortoiseGit.TortoiseGit
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install TortoiseSVN
      id: tortoiseSVN
      settings:
        id: TortoiseSVN.TortoiseSVN
        source: winget
        useLatest: true
{{- end }}
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Trezor Suite
      id: trezorSuite
      settings:
        id: SatoshiLabs.trezor-suite
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Ubuntu
      id: ubuntu
      settings:
        id: Canonical.Ubuntu
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install VeraCrypt
      id: veracrypt
      settings:
        id: IDRIX.VeraCrypt
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: visualStudio
      directives:
        description: Install Visual Studio 2022
      settings:
{{- if eq .hosttype "ewn" }}
        id: Microsoft.VisualStudio.2022.Professional
{{- else }}
        id: Microsoft.VisualStudio.2022.Community
{{- end }}
        source: winget
        # It's better to use Visual Studio Installer
        useLatest: false
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Visual Studio Code
      id: vsCode
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
        useLatest: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - C# Dev Kit
        allowPrerelease: true
      settings:
        name: ms-dotnettools.csdevkit
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Code Spell Checker
        allowPrerelease: true
      settings:
        name: streetsidesoftware.code-spell-checker
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Color Highlight
        allowPrerelease: true
      settings:
        name: naumovs.color-highlight
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Debugger for Firefox
        allowPrerelease: true
      settings:
        name: firefox-devtools.vscode-firefox-debug
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Docker
        allowPrerelease: true
      settings:
        name: ms-azuretools.vscode-docker
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - EditorConfig
        allowPrerelease: true
      settings:
        name: editorconfig.editorconfig
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - ESLint
        allowPrerelease: true
      settings:
        name: dbaeumer.vscode-eslint
        exist: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - ESPHome
        allowPrerelease: true
      settings:
        name: esphome.esphome-vscode
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - fstar-vscode-assistant
        allowPrerelease: true
      settings:
        name: fstarlang.fstar-vscode-assistant
        exist: true
{{- end }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - GitHub Copilot
        allowPrerelease: true
      settings:
        name: github.copilot
        exist: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - HAProxy
        allowPrerelease: true
      settings:
        name: bmarkovic.haproxy
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Haskell Syntax Highlighting
        allowPrerelease: true
      settings:
        name: justusadam.language-haskell
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Ionide for F#
        allowPrerelease: true
      settings:
        name: ionide.ionide-fsharp
        exist: true
{{- end }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Jupyter
        allowPrerelease: true
      settings:
        name: ms-toolsai.jupyter
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Kubernetes
        allowPrerelease: true
      settings:
        name: ms-kubernetes-tools.vscode-kubernetes-tools
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Markdown Preview Enhanced
        allowPrerelease: true
      settings:
        name: shd101wyy.markdown-preview-enhanced
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - markdownlint
        allowPrerelease: true
      settings:
        name: davidanson.vscode-markdownlint
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Polyglot Notebooks
        allowPrerelease: true
      settings:
        name: ms-dotnettools.dotnet-interactive-vscode
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - PowerShell
        allowPrerelease: true
      settings:
        name: ms-vscode.powershell
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Python
        allowPrerelease: true
      settings:
        name: ms-python.python
        exist: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Simple GHC (Haskell) Integration
        allowPrerelease: true
      settings:
        name: dramforever.vscode-ghc-simple
        exist: true
{{- end }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Todo Tree
        allowPrerelease: true
      settings:
        name: gruntfuggly.todo-tree
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Vim
        allowPrerelease: true
      settings:
        name: vscodevim.vim
        exist: true
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Vitest
        allowPrerelease: true
      settings:
        name: vitest.explorer
        exist: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - Vy(atta) like .boot file support
        allowPrerelease: true
      settings:
        name: zunix.edgerouter-conf
        exist: true
{{- end }}
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      dependsOn: [vsCode]
      directives:
        description: Install VS Code Extension - YAML
        allowPrerelease: true
      settings:
        name: redhat.vscode-yaml
        exist: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install VLC
      id: vlc
      settings:
        id: VideoLAN.VLC
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Vim
      id: vim
      settings:
        id: vim.vim
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install WinDirStat
      id: winDirStat
      settings:
        id: WinDirStat.WinDirStat
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Windows Terminal
      id: windowsTerminal
      settings:
        id: Microsoft.WindowsTerminal
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Wireguard
      id: wireguard
      settings:
        id: WireGuard.WireGuard
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Wireshark
      id: wireshark
      settings:
        id: WiresharkFoundation.Wireshark
        source: winget
        useLatest: true
{{- if eq .hosttype "personal" }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install yt-dlp
      id: ytDlp
      settings:
        id: yt-dlp.yt-dlp
        source: winget
        useLatest: true
{{- end }}
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Yubico Authenticator
      id: yubicoAuthenticator
      settings:
        id: Yubico.Authenticator
        source: winget
        useLatest: true
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Zoom
      id: zoom
      settings:
        id: Zoom.Zoom.EXE
        source: winget
        useLatest: true
